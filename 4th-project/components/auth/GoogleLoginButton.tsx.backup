'use client';

import { useEffect, useRef } from 'react';
import { AuthService } from '@/lib/auth/auth-service';
import { GoogleCredentialResponse } from '@/types/auth';
import { toast } from 'sonner';

interface GoogleLoginButtonProps {
  onSuccess?: (user: any) => void;
  onError?: (error: any) => void;
  buttonText?: string;
  theme?: 'outline' | 'filled_blue' | 'filled_black';
  size?: 'large' | 'medium' | 'small';
  shape?: 'rectangular' | 'pill' | 'circle' | 'square';
  logo_alignment?: 'left' | 'center';
  width?: number;
}

declare global {
  interface Window {
    google: {
      accounts: {
        id: {
          initialize: (config: any) => void;
          renderButton: (element: HTMLElement, config: any) => void;
          prompt: () => void;
        };
      };
    };
  }
}

export default function GoogleLoginButton({
  onSuccess,
  onError,
  buttonText = '구글로 로그인',
  theme = 'outline',
  size = 'large',
  shape = 'rectangular',
  logo_alignment = 'left',
  width = 300,
}: GoogleLoginButtonProps) {
  const googleButtonRef = useRef<HTMLDivElement>(null);
  const isInitialized = useRef(false);

  const handleCredentialResponse = async (response: GoogleCredentialResponse) => {
    try {
      const authResponse = await AuthService.googleLogin(response.credential);
      
      toast.success(`${authResponse.user.name}님, 환영합니다!`);
      
      if (onSuccess) {
        onSuccess(authResponse.user);
      }
      
      // 메인 페이지로 리다이렉트
      window.location.href = '/';
    } catch (error: any) {
      console.error('Google login error:', error);
      toast.error(error.error || '로그인에 실패했습니다.');
      
      if (onError) {
        onError(error);
      }
    }
  };

  const initializeGoogleSignIn = () => {
    if (typeof window !== 'undefined' && window.google && !isInitialized.current) {
      try {
        window.google.accounts.id.initialize({
          client_id: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,
          callback: handleCredentialResponse,
          auto_select: false,
          cancel_on_tap_outside: true,
        });

        if (googleButtonRef.current) {
          window.google.accounts.id.renderButton(googleButtonRef.current, {
            theme,
            size,
            shape,
            logo_alignment,
            width,
            text: 'signin_with',
            locale: 'ko',
          });
        }

        isInitialized.current = true;
      } catch (error) {
        console.error('Google Sign-In initialization error:', error);
      }
    }
  };

  useEffect(() => {
    // Google Sign-In SDK 로드
    const loadGoogleScript = () => {
      if (document.getElementById('google-signin-script')) {
        initializeGoogleSignIn();
        return;
      }

      const script = document.createElement('script');
      script.id = 'google-signin-script';
      script.src = 'https://accounts.google.com/gsi/client';
      script.async = true;
      script.defer = true;
      script.onload = initializeGoogleSignIn;
      document.head.appendChild(script);
    };

    loadGoogleScript();

    return () => {
      // 컴포넌트 언마운트 시 정리
      const script = document.getElementById('google-signin-script');
      if (script) {
        script.remove();
      }
      isInitialized.current = false;
    };
  }, []);

  return (
    <div className="google-login-container">
      <div ref={googleButtonRef} className="google-signin-button" />
    </div>
  );
}
